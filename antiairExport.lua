---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/1/2 17:07
---

antiairList = {}

local outputFileName = "·À¿ÕÅÚFromScripts.csv"



local D_EDT = pg.equip_data_template
local D_EDS = pg.equip_data_statistics
local D_WP = pg.weapon_property
local D_BA_T = pg.barrage_template
local D_BU_T = pg.bullet_template
local D_EDBT = pg.equip_data_by_type


local function getBarrageProp(barrageNo, propName)
    return D_BA_T[barrageNo][propName]
end

local function getBulletProp(bulletNo, propName)
    return D_BU_T[bulletNo][propName]
end

function CalculateReloadTime(reload_max, reload)
    if reload == nil then
        reload = BattleConfig.K2
    end
    return reload_max / BattleConfig.K1 / math.sqrt((reload + BattleConfig.K2) * BattleConfig.K3)
end

local function calculateBulletNum(antiair)
    return (antiair.primal_repeat + 1) * (antiair.senior_repeat + 1)
end

local function genAntiairList()
    for key, value in pairs(D_EDT) do
        if value and type(key) == "number" and not value.base then
            compare_group = D_EDBT[value.type].compare_group
            if compare_group == EquipTypeEnum["Antiair"] then
                --antiairList[key] = {}
                table.insert(antiairList, key, {})
            end
        end
    end
end

local function collectAntiairData()
    for k, v in pairs(antiairList) do
        v["icon"] = D_EDS[k].icon
        v["name"] = D_EDS[k].name
        v["tech"] = D_EDS[k].tech
        v["rarity"] = D_EDS[k].rarity
        v["max_lv"] = getEquipMaxLv(k)
        v["damage"] = D_WP[k].damage
        v["up_damage"] = getWeaponProp(k, v.max_lv, "damage")
        v["reload_max"] = D_WP[k].reload_max
        v["up_reload_max"] = getWeaponProp(k, v.max_lv, "reload_max")
        v["range"] = getBulletProp(D_WP[k].bullet_ID[1], "range")
        v["value_2"] = D_EDS[k].value_2  --antiaircraft
        if D_EDS[k].attribute_2 then
            v[D_EDS[k].attribute_2] = D_EDS[k].value_2
        end
        if D_EDS[k].attribute_3 then --hit or cannon
            v[D_EDS[k].attribute_3] = D_EDS[k].value_2
        end
        v["nationality"] = D_EDS[k].nationality
    end
end

local antiairHeaderString = "icon,name,rarity,max_lv,damage,up_damage,reload_time,up_reload_time,range,antiair,accuracy,cannon"
local function antiairToString(c)
    name = c.name .. "T" .. c.tech
    res = c.icon
    res = res .. "," .. name
    res = res .. "," .. EquipRarityName[c.rarity]
    res = res .. "," .. EquipType.Type2Name2(c.type)
    res = res .. "," .. c.max_lv
    res = res .. "," .. c.damage
    res = res .. "," .. c.up_damage
    res = res .. "," .. string.format("%0.2f", CalculateReloadTime(c.reload_max))
    res = res .. "," .. string.format("%0.2f", CalculateReloadTime(c.up_reload_max))
    res = res .. "," .. c.range
    res = res .. "," .. c["antiaircraft"]
    res = res .. "," .. c["hit"]
    res = res .. "," .. c["cannon"]

    return res
end

local function writeAntiairsToFile()
    local file = io.open (outputFileName, "w")

    file:write(antiairHeaderString.."\n")

    for k, v in pairs(antiairList) do
        local str = antiairToString(v)
        file:write(str .."\n")
    end

    file:close()
end

function exportAntiairs()
    genAntiairList()
    collectAntiairData()
    writeAntiairsToFile()
end
