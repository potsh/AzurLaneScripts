---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/1/3 1:25
---



--require("CN.sharecfg.ship_data_statistics")
--require("CN.sharecfg.ship_data_strengthen")
shipDataStat = pg.ship_data_statistics
shipDataStren = pg.ship_data_strengthen


--比较成长率，升星后成长率一致返回true
function match_ship_growth(ship)
    for i = 1, 3 do
        if not match_table(ship["attrs_growth"], shipDataStat[(ship.id + i)]["attrs_growth"]) then
            return false
        end
    end
    return true
end

--判断一艘船是否是常规船
function is_normal_ship(k)
    if k and shipDataStat[k] and type(k) == "number" and shipDataStat[k + 1] and shipDataStat[k + 2] and shipDataStat[k + 3] then
        if shipDataStat[k].name == shipDataStat[k + 1].name and shipDataStat[k].name == shipDataStat[k + 2].name and shipDataStat[k].name == shipDataStat[k + 3].name then
            return true
        end
    else
        return false
    end
end

--按照id顺序打印一个table中的ship
function print_ship_by_order(t)
    count = #t
    if count > 0 then
        table.sort(t, function(a, b) return a[1]<b[1] end)
        for i = 1, count do
            print(t[i][1], t[i][2])
        end
    end
    print("count = "..count)
end

--打印出所有成长率不一致的ship
function print_ship_growth_change()
    local t = {}
    local count = 0
    for k, v in pairs(shipDataStat) do
        if is_normal_ship(k) then
            if not match_ship_growth(v) then
                count = count + 1
                t[count] = {k, v.name}
            end
        end
    end
    print_ship_by_order(t)
end

--print_ship_growth_change()

function print_ship_not_normal()
    local normalShips = {}
    for k, v in pairs(shipDataStat) do
        if is_normal_ship(k) then
            for i = k, k+3 do
                normalShips[i] = true
            end
        end
    end
    local resShips = {}
    local count = 0
    for k, v in pairs(shipDataStat) do
        if type(k) == "number" and normalShips[k] == nil then
            count = count + 1
            resShips[count] = {k, v.name}
        end
    end
    print_ship_by_order(resShips)
end

--print_ship_not_normal()

function filter_normal_ships()
    local normalShips = {}
    local count = 0
    for k, v in pairs(shipDataStat) do
        if is_normal_ship(k) then
            for i = 0, 3 do
                count = count + 1
                normalShips[count] = { k + i, shipDataStat[k + i]}
            end
        end
    end
    table.sort(normalShips, function(a, b) return a[1]<b[1] end)
    return normalShips,count
end

--把常规船的数据打印输出到指定文件
function output_normal_ships_not_merged()
    local file = io.open ("ship_growth_not_merged.csv", "w")
    local head = "name,type,id,rarity,star,armor_type,nationality,oxy_max,durability,cannon,torpedo,antiaircraft,air,reload,xxx,hit,dodge,speed,luck,antisubmarine,"..
            "g_durability,g_cannon,g_torpedo,g_antiaircraft,g_air,g_reload,g_xxx,g_hit,g_dodge,g_speed,g_luck,g_antisubmarine,"..
            "ge_durability,ge_cannon,ge_torpedo,ge_antiaircraft,ge_air,ge_reload,ge_xxx,ge_hit,ge_dodge,ge_speed,ge_luck,ge_antisubmarine"

    file:write(head.."\n")

    local normalShips,count = filter_normal_ships()

    for i = 1, count do
        local s = normalShips[i][2]
        local str = s.name..","..s.type..","..s.id..","..s.rarity..","..s.star..","..s.armor_type..","..s.nationality..","..s.oxy_max
        str = str..","..convert_table_to_string(s.attrs)
        str = str..","..convert_table_to_string(s.attrs_growth)
        str = str..","..convert_table_to_string(s.attrs_growth_extra)
        file:write(str.."\n")
    end

    file:close()
end

--把常规船的数据打印输出到指定文件
function output_normal_ships_merged()
    local file = io.open ("ship_growth_merged.csv", "w")
    local head = "name,type,id,rarity,star,armor_type,nationality,oxy_max,"..
            "s_durability,s_cannon,s_torpedo,s_antiaircraft,s_air,"..
            "durability1,cannon1,torpedo1,antiaircraft1,air1,reload1,xxx1,hit1,dodge1,speed1,luck1,antisubmarine1,"..
            "durability2,cannon2,torpedo2,antiaircraft2,air2,reload2,xxx2,hit2,dodge2,speed2,luck2,antisubmarine2,"..
            "durability3,cannon3,torpedo3,antiaircraft3,air3,reload3,xxx3,hit3,dodge3,speed3,luck3,antisubmarine3,"..
            "durability4,cannon4,torpedo4,antiaircraft4,air4,reload4,xxx4,hit4,dodge4,speed4,luck4,antisubmarine4,"..
            "g_durability,g_cannon,g_torpedo,g_antiaircraft,g_air,g_reload,g_xxx,g_hit,g_dodge,g_speed,g_luck,g_antisubmarine,"..
            "ge_durability,ge_cannon,ge_torpedo,ge_antiaircraft,ge_air,ge_reload,ge_xxx,ge_hit,ge_dodge,ge_speed,ge_luck,ge_antisubmarine"

    file:write(head.."\n")

    local normalShips,count = filter_normal_ships()

    for i = 1, count do
        local s = normalShips[i][2]
        if s.id % 10 == 1 then
            local str = s.name..","..s.type..","..s.id..","..s.rarity..","..s.star..","..s.armor_type..","..s.nationality..","..s.oxy_max
            str = str..","..convert_table_to_string(shipDataStren[math.floor(s.id / 10)].durability)
            str = str..","..convert_table_to_string(s.attrs)
            str = str..","..convert_table_to_string(normalShips[i+1][2].attrs)
            str = str..","..convert_table_to_string(normalShips[i+2][2].attrs)
            str = str..","..convert_table_to_string(normalShips[i+3][2].attrs)
            str = str..","..convert_table_to_string(s.attrs_growth)
            str = str..","..convert_table_to_string(normalShips[i+3][2].attrs_growth_extra)
            file:write(str.."\n")
        end
    end

    file:close()
end

--分析是否有突破的ship都是个位上为1~4
--[[
count = 0
for k, v in pairs(ships) do
    if type(k) == "number" and k % 10 == 1 and ships[k + 1] == nil then
        print(k, v.name)
        count = count + 1
    end
end
print("count = ".. count)
]]--


--[[
count = 0
for k, v in pairs(ships) do
    if type(k) == "number" and k % 10 == 1 and ships[k + 1] == nil then
        print(k, v.name)
        count = count + 1
    end
end
print("count = ".. count)
]]--